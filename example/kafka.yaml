# https://kafka.apache.org/documentation/#docker
# https://github.com/apache/kafka/blob/trunk/docker/examples/README.md#using-environment-variables
# https://github.com/apache/kafka/blob/trunk/docker/examples/README.md#single-node
# https://github.com/apache/kafka/blob/trunk/docker/examples/jvm/single-node/plaintext/docker-compose.yml
# binaries/shell scripts available in /opt/kafka

# !  Set <hostname> to the name the server listens to on the network  !

# TODO: secure kafka
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      demo: kafka
  replicas: 1
  template:
    metadata:
      labels:
        demo: kafka
    spec:
      containers:
      - name: kafka
        image: apache/kafka:latest
        ports:
        - name: endpoint
          containerPort: 9092
        env:
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "BROKER"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@localhost:29093"
        - name: KAFKA_LISTENERS
          value: "CONTROLLER://:29093,SVC://:9092,BROKER://:19092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "SVC://<hostname>:9092,BROKER://localhost:19092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,SVC:PLAINTEXT"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/tmp/kraft-combined-logs"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    demo: kafka
  ports:
  - port: 9092
    targetPort: endpoint