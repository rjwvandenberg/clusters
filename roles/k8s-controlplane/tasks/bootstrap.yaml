# Bootstrap the first control plane node with kubeadm
- name: Bootstrap control plane
  become: true
  block:
  - name: Check if cluster already initialized
    stat: path=/etc/kubernetes/kubelet.conf
    register: present

  - debug: msg="Cluster already initialized, since /etc/kubernetes/kubelet.conf exists. Consider using kubeadm reset if you want to create a new cluster."
    when: present.stat.exists

  - name: Copy certs
    copy: 
      src: "{{certs}}"
      dest: /etc/kubernetes/pki/
      owner: root
      group: root
      mode: 0600
    when: certs != "Unspecified"

  - name: Copy InitConfiguration
    template:
      src: init.j2
      dest: /root/init.yaml
      owner: root
      group: root
      mode: 0400

  # init adds deprecated flags /var/lib/kubelet/kubeadm-flags.env
  - name: Initialize cluster
    command: kubeadm init --config=/root/init.yaml
    register: init
    when: not present.stat.exists

  - debug: msg={{ init.stdout_lines }}
    when: not present.stat.exists and init.rc == 0

  - name: Kube directory for user
    file:
      path: /home/{{ ansible_user_id }}/.kube
      state: directory
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0755
    
  - name: Copy kube config
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/{{ ansible_user_id }}/.kube/config
      remote_src: true
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_id }}"
      mode: 0600

# Don't enable this if you want to do transparent encryption (control-plane node? excluded from transparent encryption /docs/keymanagement.md)
# Does not work with system certs? and only accepts single cert as parameter?
#- name: Remove NoSchedule
#  kubernetes.core.k8s_taint:
#    name: "{{ ansible_hostname }}"
#    state: absent
#    taints:
#    - effect: NoSchedule
#      key: node-role.kubernetes.io/control-plane
#  when: config.scheduling_on_control_plane == "allow"
#- name: Add PreferNoSchedule
#  kubernetes.core.k8s_taint:
#    name: "{{ ansible_hostname }}"
#    state: present
#    taints:
#    - effect: PreferNoSchedule
#      key: node-role.kubernetes.io/control-plane 
#  when: config.scheduling_on_control_plane == "allow"
  